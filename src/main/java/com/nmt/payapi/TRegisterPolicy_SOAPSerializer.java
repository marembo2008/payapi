// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.nmt.payapi;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class TRegisterPolicy_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_MessageCode_QNAME = new QName("", "MessageCode");
    private static final javax.xml.namespace.QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns2_myns2_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_MessageDescription_QNAME = new QName("", "MessageDescription");
    private static final javax.xml.namespace.QName ns1_PolicyNumber_QNAME = new QName("", "PolicyNumber");
    private static final javax.xml.namespace.QName ns1_Institution_QNAME = new QName("", "Institution");
    private static final javax.xml.namespace.QName ns1_InstitutionCallCenter_QNAME = new QName("", "InstitutionCallCenter");
    private static final javax.xml.namespace.QName ns1_AmountDue_QNAME = new QName("", "AmountDue");
    private static final javax.xml.namespace.QName ns2_double_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DOUBLE;
    private CombinedSerializer ns2_myns2__double__double_Double_Serializer;
    private static final javax.xml.namespace.QName ns1_PayAfterRegister_QNAME = new QName("", "PayAfterRegister");
    private static final javax.xml.namespace.QName ns2_boolean_TYPE_QNAME = SchemaConstants.QNAME_TYPE_BOOLEAN;
    private CombinedSerializer ns2_myns2__boolean__boolean_Boolean_Serializer;
    private static final javax.xml.namespace.QName ns1_ReceiptReferenceNumber_QNAME = new QName("", "ReceiptReferenceNumber");
    private static final javax.xml.namespace.QName ns1_ClientInfo_QNAME = new QName("", "ClientInfo");
    private static final javax.xml.namespace.QName ns3_TClientDetailPolicy_TYPE_QNAME = new QName("urn:WebserviceIntf", "TClientDetailPolicy");
    private CombinedSerializer ns3_myTClientDetailPolicy_SOAPSerializer;
    private static final int myMESSAGECODE_INDEX = 0;
    private static final int myMESSAGEDESCRIPTION_INDEX = 1;
    private static final int myPOLICYNUMBER_INDEX = 2;
    private static final int myINSTITUTION_INDEX = 3;
    private static final int myINSTITUTIONCALLCENTER_INDEX = 4;
    private static final int myAMOUNTDUE_INDEX = 5;
    private static final int myPAYAFTERREGISTER_INDEX = 6;
    private static final int myRECEIPTREFERENCENUMBER_INDEX = 7;
    private static final int myCLIENTINFO_INDEX = 8;
    
    public TRegisterPolicy_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        ns2_myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns2_string_TYPE_QNAME);
        ns2_myns2__double__double_Double_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, double.class, ns2_double_TYPE_QNAME);
        ns2_myns2__boolean__boolean_Boolean_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, boolean.class, ns2_boolean_TYPE_QNAME);
        ns3_myTClientDetailPolicy_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.TClientDetailPolicy.class, ns3_TClientDetailPolicy_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        com.nmt.payapi.TRegisterPolicy instance = new com.nmt.payapi.TRegisterPolicy();
        com.nmt.payapi.TRegisterPolicy_SOAPBuilder builder = null;
        java.lang.Object member;
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_MessageCode_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_MessageCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TRegisterPolicy_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myMESSAGECODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setMessageCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_MessageDescription_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_MessageDescription_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TRegisterPolicy_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myMESSAGEDESCRIPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setMessageDescription((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_PolicyNumber_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_PolicyNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TRegisterPolicy_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPOLICYNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPolicyNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_Institution_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_Institution_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TRegisterPolicy_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myINSTITUTION_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setInstitution((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_InstitutionCallCenter_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_InstitutionCallCenter_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TRegisterPolicy_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myINSTITUTIONCALLCENTER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setInstitutionCallCenter((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_AmountDue_QNAME)) {
                member = ns2_myns2__double__double_Double_Serializer.deserialize(ns1_AmountDue_QNAME, reader, context);
                instance.setAmountDue(((Double)member).doubleValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_PayAfterRegister_QNAME)) {
                member = ns2_myns2__boolean__boolean_Boolean_Serializer.deserialize(ns1_PayAfterRegister_QNAME, reader, context);
                instance.setPayAfterRegister(((Boolean)member).booleanValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ReceiptReferenceNumber_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ReceiptReferenceNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TRegisterPolicy_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIPTREFERENCENUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiptReferenceNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ClientInfo_QNAME)) {
                member = ns3_myTClientDetailPolicy_SOAPSerializer.deserialize(ns1_ClientInfo_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TRegisterPolicy_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCLIENTINFO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setClientInfo((com.nmt.payapi.TClientDetailPolicy)member);
                }
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (java.lang.Object)instance : (java.lang.Object)state);
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.nmt.payapi.TRegisterPolicy instance = (com.nmt.payapi.TRegisterPolicy)obj;
        
    }
    
    public void doSerializeInstance(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.nmt.payapi.TRegisterPolicy instance = (com.nmt.payapi.TRegisterPolicy)obj;
        
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getMessageCode(), ns1_MessageCode_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getMessageDescription(), ns1_MessageDescription_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getPolicyNumber(), ns1_PolicyNumber_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getInstitution(), ns1_Institution_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getInstitutionCallCenter(), ns1_InstitutionCallCenter_QNAME, null, writer, context);
        ns2_myns2__double__double_Double_Serializer.serialize(new Double(instance.getAmountDue()), ns1_AmountDue_QNAME, null, writer, context);
        ns2_myns2__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isPayAfterRegister()), ns1_PayAfterRegister_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getReceiptReferenceNumber(), ns1_ReceiptReferenceNumber_QNAME, null, writer, context);
        ns3_myTClientDetailPolicy_SOAPSerializer.serialize(instance.getClientInfo(), ns1_ClientInfo_QNAME, null, writer, context);
    }
}
