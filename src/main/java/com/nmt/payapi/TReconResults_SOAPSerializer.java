// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.nmt.payapi;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class TReconResults_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_TransactionID_QNAME = new QName("", "TransactionID");
    private static final javax.xml.namespace.QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns2_myns2_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_TransactionDate_QNAME = new QName("", "TransactionDate");
    private static final javax.xml.namespace.QName ns1_Amount_QNAME = new QName("", "Amount");
    private static final javax.xml.namespace.QName ns2_double_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DOUBLE;
    private CombinedSerializer ns2_myns2__double__double_Double_Serializer;
    private static final javax.xml.namespace.QName ns1_RefNo_QNAME = new QName("", "RefNo");
    private static final javax.xml.namespace.QName ns1_StoreID_QNAME = new QName("", "StoreID");
    private static final javax.xml.namespace.QName ns1_TillID_QNAME = new QName("", "TillID");
    private static final javax.xml.namespace.QName ns1_PolicyNo_QNAME = new QName("", "PolicyNo");
    private static final javax.xml.namespace.QName ns1_MessageCode_QNAME = new QName("", "MessageCode");
    private static final javax.xml.namespace.QName ns1_MessageDescription_QNAME = new QName("", "MessageDescription");
    private static final javax.xml.namespace.QName ns1_TransStatus_QNAME = new QName("", "TransStatus");
    private static final int myTRANSACTIONID_INDEX = 0;
    private static final int myTRANSACTIONDATE_INDEX = 1;
    private static final int myAMOUNT_INDEX = 2;
    private static final int myREFNO_INDEX = 3;
    private static final int mySTOREID_INDEX = 4;
    private static final int myTILLID_INDEX = 5;
    private static final int myPOLICYNO_INDEX = 6;
    private static final int myMESSAGECODE_INDEX = 7;
    private static final int myMESSAGEDESCRIPTION_INDEX = 8;
    private static final int myTRANSSTATUS_INDEX = 9;
    
    public TReconResults_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        ns2_myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns2_string_TYPE_QNAME);
        ns2_myns2__double__double_Double_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, double.class, ns2_double_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        com.nmt.payapi.TReconResults instance = new com.nmt.payapi.TReconResults();
        com.nmt.payapi.TReconResults_SOAPBuilder builder = null;
        java.lang.Object member;
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_TransactionID_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_TransactionID_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TReconResults_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTRANSACTIONID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTransactionID((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_TransactionDate_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_TransactionDate_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TReconResults_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTRANSACTIONDATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTransactionDate((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_Amount_QNAME)) {
                member = ns2_myns2__double__double_Double_Serializer.deserialize(ns1_Amount_QNAME, reader, context);
                instance.setAmount(((Double)member).doubleValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_RefNo_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_RefNo_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TReconResults_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myREFNO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setRefNo((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_StoreID_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_StoreID_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TReconResults_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySTOREID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setStoreID((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_TillID_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_TillID_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TReconResults_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTILLID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTillID((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_PolicyNo_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_PolicyNo_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TReconResults_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPOLICYNO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPolicyNo((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_MessageCode_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_MessageCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TReconResults_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myMESSAGECODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setMessageCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_MessageDescription_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_MessageDescription_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TReconResults_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myMESSAGEDESCRIPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setMessageDescription((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_TransStatus_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_TransStatus_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.nmt.payapi.TReconResults_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTRANSSTATUS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTransStatus((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (java.lang.Object)instance : (java.lang.Object)state);
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.nmt.payapi.TReconResults instance = (com.nmt.payapi.TReconResults)obj;
        
    }
    
    public void doSerializeInstance(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.nmt.payapi.TReconResults instance = (com.nmt.payapi.TReconResults)obj;
        
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getTransactionID(), ns1_TransactionID_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getTransactionDate(), ns1_TransactionDate_QNAME, null, writer, context);
        ns2_myns2__double__double_Double_Serializer.serialize(new Double(instance.getAmount()), ns1_Amount_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getRefNo(), ns1_RefNo_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getStoreID(), ns1_StoreID_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getTillID(), ns1_TillID_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getPolicyNo(), ns1_PolicyNo_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getMessageCode(), ns1_MessageCode_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getMessageDescription(), ns1_MessageDescription_QNAME, null, writer, context);
        ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getTransStatus(), ns1_TransStatus_QNAME, null, writer, context);
    }
}
