// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.nmt.payapi;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.client.SenderException;
import com.sun.xml.rpc.client.*;
import com.sun.xml.rpc.client.http.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class Webservice_Stub
    extends com.sun.xml.rpc.client.StubBase
    implements com.nmt.payapi.Webservice {
    
    
    
    /*
     *  public constructor
     */
    public Webservice_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://196.34.95.221/scripts/KwikpayWebserviceQA.exe/soap/webservice");
    }
    
    
    /*
     *  implementation of cancelPolicy
     */
    public com.nmt.payapi.TCancelPolicy cancelPolicy(java.lang.String loginID, java.lang.String password, java.lang.String policyNumber, java.lang.String echo)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CancelPolicy_OPCODE);
            com.nmt.payapi.Webservice_CancelPolicy_RequestStruct _myWebservice_CancelPolicy_RequestStruct =
                new com.nmt.payapi.Webservice_CancelPolicy_RequestStruct();
            
            _myWebservice_CancelPolicy_RequestStruct.setLoginID(loginID);
            _myWebservice_CancelPolicy_RequestStruct.setPassword(password);
            _myWebservice_CancelPolicy_RequestStruct.setPolicyNumber(policyNumber);
            _myWebservice_CancelPolicy_RequestStruct.setEcho(echo);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CancelPolicy_CancelPolicy_QNAME);
            _bodyBlock.setValue(_myWebservice_CancelPolicy_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_CancelPolicy_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#CancelPolicy");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_CancelPolicy_ResponseStruct _myWebservice_CancelPolicy_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_CancelPolicy_ResponseStruct =
                    (com.nmt.payapi.Webservice_CancelPolicy_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_CancelPolicy_ResponseStruct =
                    (com.nmt.payapi.Webservice_CancelPolicy_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_CancelPolicy_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of uploadRecon
     */
    public com.nmt.payapi.TReconUploadResult uploadRecon(java.lang.String loginID, java.lang.String password, java.lang.String transactionID, java.lang.String transactionDate, double transactionAmount, java.lang.String refNo, java.lang.String echo)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(UploadRecon_OPCODE);
            com.nmt.payapi.Webservice_UploadRecon_RequestStruct _myWebservice_UploadRecon_RequestStruct =
                new com.nmt.payapi.Webservice_UploadRecon_RequestStruct();
            
            _myWebservice_UploadRecon_RequestStruct.setLoginID(loginID);
            _myWebservice_UploadRecon_RequestStruct.setPassword(password);
            _myWebservice_UploadRecon_RequestStruct.setTransactionID(transactionID);
            _myWebservice_UploadRecon_RequestStruct.setTransactionDate(transactionDate);
            _myWebservice_UploadRecon_RequestStruct.setTransactionAmount(transactionAmount);
            _myWebservice_UploadRecon_RequestStruct.setRefNo(refNo);
            _myWebservice_UploadRecon_RequestStruct.setEcho(echo);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_UploadRecon_UploadRecon_QNAME);
            _bodyBlock.setValue(_myWebservice_UploadRecon_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_UploadRecon_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#UploadRecon");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_UploadRecon_ResponseStruct _myWebservice_UploadRecon_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_UploadRecon_ResponseStruct =
                    (com.nmt.payapi.Webservice_UploadRecon_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_UploadRecon_ResponseStruct =
                    (com.nmt.payapi.Webservice_UploadRecon_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_UploadRecon_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of callMe
     */
    public com.nmt.payapi.TCallMeResult callMe(java.lang.String loginID, java.lang.String password, java.lang.String contactNo, java.lang.String storeID, java.lang.String tillID)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(CallMe_OPCODE);
            com.nmt.payapi.Webservice_CallMe_RequestStruct _myWebservice_CallMe_RequestStruct =
                new com.nmt.payapi.Webservice_CallMe_RequestStruct();
            
            _myWebservice_CallMe_RequestStruct.setLoginID(loginID);
            _myWebservice_CallMe_RequestStruct.setPassword(password);
            _myWebservice_CallMe_RequestStruct.setContactNo(contactNo);
            _myWebservice_CallMe_RequestStruct.setStoreID(storeID);
            _myWebservice_CallMe_RequestStruct.setTillID(tillID);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_CallMe_CallMe_QNAME);
            _bodyBlock.setValue(_myWebservice_CallMe_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_CallMe_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#CallMe");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_CallMe_ResponseStruct _myWebservice_CallMe_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_CallMe_ResponseStruct =
                    (com.nmt.payapi.Webservice_CallMe_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_CallMe_ResponseStruct =
                    (com.nmt.payapi.Webservice_CallMe_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_CallMe_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of voidPayment
     */
    public com.nmt.payapi.TVoidPaymentResponse voidPayment(java.lang.String loginID, java.lang.String password, java.lang.String transactionID, java.lang.String echo)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(VoidPayment_OPCODE);
            com.nmt.payapi.Webservice_VoidPayment_RequestStruct _myWebservice_VoidPayment_RequestStruct =
                new com.nmt.payapi.Webservice_VoidPayment_RequestStruct();
            
            _myWebservice_VoidPayment_RequestStruct.setLoginID(loginID);
            _myWebservice_VoidPayment_RequestStruct.setPassword(password);
            _myWebservice_VoidPayment_RequestStruct.setTransactionID(transactionID);
            _myWebservice_VoidPayment_RequestStruct.setEcho(echo);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_VoidPayment_VoidPayment_QNAME);
            _bodyBlock.setValue(_myWebservice_VoidPayment_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_VoidPayment_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#VoidPayment");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_VoidPayment_ResponseStruct _myWebservice_VoidPayment_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_VoidPayment_ResponseStruct =
                    (com.nmt.payapi.Webservice_VoidPayment_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_VoidPayment_ResponseStruct =
                    (com.nmt.payapi.Webservice_VoidPayment_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_VoidPayment_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of downloadRecon
     */
    public com.nmt.payapi.TReconResults[] downloadRecon(java.lang.String loginID, java.lang.String password, java.lang.String reconDate, java.lang.String echo)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(DownloadRecon_OPCODE);
            com.nmt.payapi.Webservice_DownloadRecon_RequestStruct _myWebservice_DownloadRecon_RequestStruct =
                new com.nmt.payapi.Webservice_DownloadRecon_RequestStruct();
            
            _myWebservice_DownloadRecon_RequestStruct.setLoginID(loginID);
            _myWebservice_DownloadRecon_RequestStruct.setPassword(password);
            _myWebservice_DownloadRecon_RequestStruct.setReconDate(reconDate);
            _myWebservice_DownloadRecon_RequestStruct.setEcho(echo);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_DownloadRecon_DownloadRecon_QNAME);
            _bodyBlock.setValue(_myWebservice_DownloadRecon_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_DownloadRecon_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#DownloadRecon");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_DownloadRecon_ResponseStruct _myWebservice_DownloadRecon_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_DownloadRecon_ResponseStruct =
                    (com.nmt.payapi.Webservice_DownloadRecon_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_DownloadRecon_ResponseStruct =
                    (com.nmt.payapi.Webservice_DownloadRecon_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_DownloadRecon_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of verifyPolicy
     */
    public com.nmt.payapi.TClientDetailPolicy verifyPolicy(java.lang.String loginID, java.lang.String password, java.lang.String policyNumber)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(VerifyPolicy_OPCODE);
            com.nmt.payapi.Webservice_VerifyPolicy_RequestStruct _myWebservice_VerifyPolicy_RequestStruct =
                new com.nmt.payapi.Webservice_VerifyPolicy_RequestStruct();
            
            _myWebservice_VerifyPolicy_RequestStruct.setLoginID(loginID);
            _myWebservice_VerifyPolicy_RequestStruct.setPassword(password);
            _myWebservice_VerifyPolicy_RequestStruct.setPolicyNumber(policyNumber);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_VerifyPolicy_VerifyPolicy_QNAME);
            _bodyBlock.setValue(_myWebservice_VerifyPolicy_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_VerifyPolicy_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#VerifyPolicy");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_VerifyPolicy_ResponseStruct _myWebservice_VerifyPolicy_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_VerifyPolicy_ResponseStruct =
                    (com.nmt.payapi.Webservice_VerifyPolicy_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_VerifyPolicy_ResponseStruct =
                    (com.nmt.payapi.Webservice_VerifyPolicy_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_VerifyPolicy_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of payAccount
     */
    public com.nmt.payapi.TClientDetailAccount payAccount(java.lang.String loginID, java.lang.String password, java.lang.String accountNo, boolean realTime, boolean verifyOnly, double amountDue, double additionalAmount, java.lang.String paymentRefNumber, java.lang.String storeID, java.lang.String tillID, java.lang.String paymentReceiptNo, java.lang.String echo)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(PayAccount_OPCODE);
            com.nmt.payapi.Webservice_PayAccount_RequestStruct _myWebservice_PayAccount_RequestStruct =
                new com.nmt.payapi.Webservice_PayAccount_RequestStruct();
            
            _myWebservice_PayAccount_RequestStruct.setLoginID(loginID);
            _myWebservice_PayAccount_RequestStruct.setPassword(password);
            _myWebservice_PayAccount_RequestStruct.setAccountNo(accountNo);
            _myWebservice_PayAccount_RequestStruct.setRealTime(realTime);
            _myWebservice_PayAccount_RequestStruct.setVerifyOnly(verifyOnly);
            _myWebservice_PayAccount_RequestStruct.setAmountDue(amountDue);
            _myWebservice_PayAccount_RequestStruct.setAdditionalAmount(additionalAmount);
            _myWebservice_PayAccount_RequestStruct.setPaymentRefNumber(paymentRefNumber);
            _myWebservice_PayAccount_RequestStruct.setStoreID(storeID);
            _myWebservice_PayAccount_RequestStruct.setTillID(tillID);
            _myWebservice_PayAccount_RequestStruct.setPaymentReceiptNo(paymentReceiptNo);
            _myWebservice_PayAccount_RequestStruct.setEcho(echo);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_PayAccount_PayAccount_QNAME);
            _bodyBlock.setValue(_myWebservice_PayAccount_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_PayAccount_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#PayAccount");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_PayAccount_ResponseStruct _myWebservice_PayAccount_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_PayAccount_ResponseStruct =
                    (com.nmt.payapi.Webservice_PayAccount_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_PayAccount_ResponseStruct =
                    (com.nmt.payapi.Webservice_PayAccount_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_PayAccount_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of payRefund
     */
    public com.nmt.payapi.TPayRefund payRefund(java.lang.String loginID, java.lang.String password, java.lang.String transactionID, java.lang.String refundReason, java.lang.String echo)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(PayRefund_OPCODE);
            com.nmt.payapi.Webservice_PayRefund_RequestStruct _myWebservice_PayRefund_RequestStruct =
                new com.nmt.payapi.Webservice_PayRefund_RequestStruct();
            
            _myWebservice_PayRefund_RequestStruct.setLoginID(loginID);
            _myWebservice_PayRefund_RequestStruct.setPassword(password);
            _myWebservice_PayRefund_RequestStruct.setTransactionID(transactionID);
            _myWebservice_PayRefund_RequestStruct.setRefundReason(refundReason);
            _myWebservice_PayRefund_RequestStruct.setEcho(echo);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_PayRefund_PayRefund_QNAME);
            _bodyBlock.setValue(_myWebservice_PayRefund_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_PayRefund_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#PayRefund");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_PayRefund_ResponseStruct _myWebservice_PayRefund_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_PayRefund_ResponseStruct =
                    (com.nmt.payapi.Webservice_PayRefund_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_PayRefund_ResponseStruct =
                    (com.nmt.payapi.Webservice_PayRefund_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_PayRefund_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of echo
     */
    public com.nmt.payapi.TEchoResult echo(java.lang.String loginID, java.lang.String password, java.lang.String echoMessage)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(Echo_OPCODE);
            com.nmt.payapi.Webservice_Echo_RequestStruct _myWebservice_Echo_RequestStruct =
                new com.nmt.payapi.Webservice_Echo_RequestStruct();
            
            _myWebservice_Echo_RequestStruct.setLoginID(loginID);
            _myWebservice_Echo_RequestStruct.setPassword(password);
            _myWebservice_Echo_RequestStruct.setEchoMessage(echoMessage);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_Echo_Echo_QNAME);
            _bodyBlock.setValue(_myWebservice_Echo_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_Echo_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#Echo");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_Echo_ResponseStruct _myWebservice_Echo_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_Echo_ResponseStruct =
                    (com.nmt.payapi.Webservice_Echo_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_Echo_ResponseStruct =
                    (com.nmt.payapi.Webservice_Echo_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_Echo_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of payTrafficFine
     */
    public com.nmt.payapi.TClientDetailAccount payTrafficFine(java.lang.String loginID, java.lang.String password, java.lang.String noticeNumber, boolean verifyOnly, double amountDue, java.lang.String paymentRefNumber, java.lang.String storeID, java.lang.String tillID, java.lang.String paymentReceiptNo, java.lang.String echo)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(PayTrafficFine_OPCODE);
            com.nmt.payapi.Webservice_PayTrafficFine_RequestStruct _myWebservice_PayTrafficFine_RequestStruct =
                new com.nmt.payapi.Webservice_PayTrafficFine_RequestStruct();
            
            _myWebservice_PayTrafficFine_RequestStruct.setLoginID(loginID);
            _myWebservice_PayTrafficFine_RequestStruct.setPassword(password);
            _myWebservice_PayTrafficFine_RequestStruct.setNoticeNumber(noticeNumber);
            _myWebservice_PayTrafficFine_RequestStruct.setVerifyOnly(verifyOnly);
            _myWebservice_PayTrafficFine_RequestStruct.setAmountDue(amountDue);
            _myWebservice_PayTrafficFine_RequestStruct.setPaymentRefNumber(paymentRefNumber);
            _myWebservice_PayTrafficFine_RequestStruct.setStoreID(storeID);
            _myWebservice_PayTrafficFine_RequestStruct.setTillID(tillID);
            _myWebservice_PayTrafficFine_RequestStruct.setPaymentReceiptNo(paymentReceiptNo);
            _myWebservice_PayTrafficFine_RequestStruct.setEcho(echo);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_PayTrafficFine_PayTrafficFine_QNAME);
            _bodyBlock.setValue(_myWebservice_PayTrafficFine_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_PayTrafficFine_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#PayTrafficFine");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_PayTrafficFine_ResponseStruct _myWebservice_PayTrafficFine_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_PayTrafficFine_ResponseStruct =
                    (com.nmt.payapi.Webservice_PayTrafficFine_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_PayTrafficFine_ResponseStruct =
                    (com.nmt.payapi.Webservice_PayTrafficFine_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_PayTrafficFine_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of confirmPayment
     */
    public com.nmt.payapi.TConfirmP confirmPayment(java.lang.String loginID, java.lang.String password, java.lang.String transactionID, double amountDue, double additionalAmount, java.lang.String tenderType, int confirmationType, java.lang.String echo, java.lang.String cardNumber, java.lang.String currencyCode)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(ConfirmPayment_OPCODE);
            com.nmt.payapi.Webservice_ConfirmPayment_RequestStruct _myWebservice_ConfirmPayment_RequestStruct =
                new com.nmt.payapi.Webservice_ConfirmPayment_RequestStruct();
            
            _myWebservice_ConfirmPayment_RequestStruct.setLoginID(loginID);
            _myWebservice_ConfirmPayment_RequestStruct.setPassword(password);
            _myWebservice_ConfirmPayment_RequestStruct.setTransactionID(transactionID);
            _myWebservice_ConfirmPayment_RequestStruct.setAmountDue(amountDue);
            _myWebservice_ConfirmPayment_RequestStruct.setAdditionalAmount(additionalAmount);
            _myWebservice_ConfirmPayment_RequestStruct.setTenderType(tenderType);
            _myWebservice_ConfirmPayment_RequestStruct.setConfirmationType(confirmationType);
            _myWebservice_ConfirmPayment_RequestStruct.setEcho(echo);
            _myWebservice_ConfirmPayment_RequestStruct.setCardNumber(cardNumber);
            _myWebservice_ConfirmPayment_RequestStruct.setCurrencyCode(currencyCode);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_ConfirmPayment_ConfirmPayment_QNAME);
            _bodyBlock.setValue(_myWebservice_ConfirmPayment_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_ConfirmPayment_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#ConfirmPayment");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_ConfirmPayment_ResponseStruct _myWebservice_ConfirmPayment_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_ConfirmPayment_ResponseStruct =
                    (com.nmt.payapi.Webservice_ConfirmPayment_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_ConfirmPayment_ResponseStruct =
                    (com.nmt.payapi.Webservice_ConfirmPayment_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_ConfirmPayment_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of payoutAccount
     */
    public com.nmt.payapi.TPayoutDetails payoutAccount(java.lang.String loginID, java.lang.String password, java.lang.String paymentRefNumber, java.lang.String pinCode, java.lang.String echo)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(PayoutAccount_OPCODE);
            com.nmt.payapi.Webservice_PayoutAccount_RequestStruct _myWebservice_PayoutAccount_RequestStruct =
                new com.nmt.payapi.Webservice_PayoutAccount_RequestStruct();
            
            _myWebservice_PayoutAccount_RequestStruct.setLoginID(loginID);
            _myWebservice_PayoutAccount_RequestStruct.setPassword(password);
            _myWebservice_PayoutAccount_RequestStruct.setPaymentRefNumber(paymentRefNumber);
            _myWebservice_PayoutAccount_RequestStruct.setPinCode(pinCode);
            _myWebservice_PayoutAccount_RequestStruct.setEcho(echo);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_PayoutAccount_PayoutAccount_QNAME);
            _bodyBlock.setValue(_myWebservice_PayoutAccount_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_PayoutAccount_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#PayoutAccount");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_PayoutAccount_ResponseStruct _myWebservice_PayoutAccount_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_PayoutAccount_ResponseStruct =
                    (com.nmt.payapi.Webservice_PayoutAccount_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_PayoutAccount_ResponseStruct =
                    (com.nmt.payapi.Webservice_PayoutAccount_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_PayoutAccount_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of registerPolicy
     */
    public com.nmt.payapi.TRegisterPolicy registerPolicy(java.lang.String loginID, java.lang.String password, java.lang.String policyNumber, java.lang.String firstName, java.lang.String lastName, java.lang.String IDNumber, java.lang.String contactNumber, java.lang.String address, java.lang.String textField1, java.lang.String textField2, java.lang.String textField3, boolean realTime, java.lang.String echo, double additionalAmount, java.lang.String paymentRefNumber, java.lang.String storeID, java.lang.String tillID, java.lang.String paymentReceiptNo, boolean realTimePayment, boolean verifyOnly)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(RegisterPolicy_OPCODE);
            com.nmt.payapi.Webservice_RegisterPolicy_RequestStruct _myWebservice_RegisterPolicy_RequestStruct =
                new com.nmt.payapi.Webservice_RegisterPolicy_RequestStruct();
            
            _myWebservice_RegisterPolicy_RequestStruct.setLoginID(loginID);
            _myWebservice_RegisterPolicy_RequestStruct.setPassword(password);
            _myWebservice_RegisterPolicy_RequestStruct.setPolicyNumber(policyNumber);
            _myWebservice_RegisterPolicy_RequestStruct.setFirstName(firstName);
            _myWebservice_RegisterPolicy_RequestStruct.setLastName(lastName);
            _myWebservice_RegisterPolicy_RequestStruct.setIDNumber(IDNumber);
            _myWebservice_RegisterPolicy_RequestStruct.setContactNumber(contactNumber);
            _myWebservice_RegisterPolicy_RequestStruct.setAddress(address);
            _myWebservice_RegisterPolicy_RequestStruct.setTextField1(textField1);
            _myWebservice_RegisterPolicy_RequestStruct.setTextField2(textField2);
            _myWebservice_RegisterPolicy_RequestStruct.setTextField3(textField3);
            _myWebservice_RegisterPolicy_RequestStruct.setRealTime(realTime);
            _myWebservice_RegisterPolicy_RequestStruct.setEcho(echo);
            _myWebservice_RegisterPolicy_RequestStruct.setAdditionalAmount(additionalAmount);
            _myWebservice_RegisterPolicy_RequestStruct.setPaymentRefNumber(paymentRefNumber);
            _myWebservice_RegisterPolicy_RequestStruct.setStoreID(storeID);
            _myWebservice_RegisterPolicy_RequestStruct.setTillID(tillID);
            _myWebservice_RegisterPolicy_RequestStruct.setPaymentReceiptNo(paymentReceiptNo);
            _myWebservice_RegisterPolicy_RequestStruct.setRealTimePayment(realTimePayment);
            _myWebservice_RegisterPolicy_RequestStruct.setVerifyOnly(verifyOnly);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_RegisterPolicy_RegisterPolicy_QNAME);
            _bodyBlock.setValue(_myWebservice_RegisterPolicy_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_RegisterPolicy_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#RegisterPolicy");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_RegisterPolicy_ResponseStruct _myWebservice_RegisterPolicy_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_RegisterPolicy_ResponseStruct =
                    (com.nmt.payapi.Webservice_RegisterPolicy_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_RegisterPolicy_ResponseStruct =
                    (com.nmt.payapi.Webservice_RegisterPolicy_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_RegisterPolicy_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of payPolicy
     */
    public com.nmt.payapi.TClientDetailPolicy payPolicy(java.lang.String loginID, java.lang.String password, java.lang.String policyNumber, boolean realTime, boolean verifyOnly, double amountDue, double additionalAmount, java.lang.String paymentRefNumber, java.lang.String storeID, java.lang.String tillID, java.lang.String paymentReceiptNo, java.lang.String echo)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(PayPolicy_OPCODE);
            com.nmt.payapi.Webservice_PayPolicy_RequestStruct _myWebservice_PayPolicy_RequestStruct =
                new com.nmt.payapi.Webservice_PayPolicy_RequestStruct();
            
            _myWebservice_PayPolicy_RequestStruct.setLoginID(loginID);
            _myWebservice_PayPolicy_RequestStruct.setPassword(password);
            _myWebservice_PayPolicy_RequestStruct.setPolicyNumber(policyNumber);
            _myWebservice_PayPolicy_RequestStruct.setRealTime(realTime);
            _myWebservice_PayPolicy_RequestStruct.setVerifyOnly(verifyOnly);
            _myWebservice_PayPolicy_RequestStruct.setAmountDue(amountDue);
            _myWebservice_PayPolicy_RequestStruct.setAdditionalAmount(additionalAmount);
            _myWebservice_PayPolicy_RequestStruct.setPaymentRefNumber(paymentRefNumber);
            _myWebservice_PayPolicy_RequestStruct.setStoreID(storeID);
            _myWebservice_PayPolicy_RequestStruct.setTillID(tillID);
            _myWebservice_PayPolicy_RequestStruct.setPaymentReceiptNo(paymentReceiptNo);
            _myWebservice_PayPolicy_RequestStruct.setEcho(echo);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_PayPolicy_PayPolicy_QNAME);
            _bodyBlock.setValue(_myWebservice_PayPolicy_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_PayPolicy_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#PayPolicy");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_PayPolicy_ResponseStruct _myWebservice_PayPolicy_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_PayPolicy_ResponseStruct =
                    (com.nmt.payapi.Webservice_PayPolicy_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_PayPolicy_ResponseStruct =
                    (com.nmt.payapi.Webservice_PayPolicy_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_PayPolicy_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of registerAccount
     */
    public java.lang.String registerAccount(java.lang.String loginID, java.lang.String password, java.lang.String accountNumber, java.lang.String firstName, java.lang.String lastName, java.lang.String IDNumber, java.lang.String contactNumber, java.lang.String address, java.lang.String textField1, java.lang.String textField2, java.lang.String textField3, boolean realTime, java.lang.String echo)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(RegisterAccount_OPCODE);
            com.nmt.payapi.Webservice_RegisterAccount_RequestStruct _myWebservice_RegisterAccount_RequestStruct =
                new com.nmt.payapi.Webservice_RegisterAccount_RequestStruct();
            
            _myWebservice_RegisterAccount_RequestStruct.setLoginID(loginID);
            _myWebservice_RegisterAccount_RequestStruct.setPassword(password);
            _myWebservice_RegisterAccount_RequestStruct.setAccountNumber(accountNumber);
            _myWebservice_RegisterAccount_RequestStruct.setFirstName(firstName);
            _myWebservice_RegisterAccount_RequestStruct.setLastName(lastName);
            _myWebservice_RegisterAccount_RequestStruct.setIDNumber(IDNumber);
            _myWebservice_RegisterAccount_RequestStruct.setContactNumber(contactNumber);
            _myWebservice_RegisterAccount_RequestStruct.setAddress(address);
            _myWebservice_RegisterAccount_RequestStruct.setTextField1(textField1);
            _myWebservice_RegisterAccount_RequestStruct.setTextField2(textField2);
            _myWebservice_RegisterAccount_RequestStruct.setTextField3(textField3);
            _myWebservice_RegisterAccount_RequestStruct.setRealTime(realTime);
            _myWebservice_RegisterAccount_RequestStruct.setEcho(echo);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_RegisterAccount_RegisterAccount_QNAME);
            _bodyBlock.setValue(_myWebservice_RegisterAccount_RequestStruct);
            _bodyBlock.setSerializer(ns1_myWebservice_RegisterAccount_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "urn:WebserviceIntf-Webservice#RegisterAccount");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.nmt.payapi.Webservice_RegisterAccount_ResponseStruct _myWebservice_RegisterAccount_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myWebservice_RegisterAccount_ResponseStruct =
                    (com.nmt.payapi.Webservice_RegisterAccount_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myWebservice_RegisterAccount_ResponseStruct =
                    (com.nmt.payapi.Webservice_RegisterAccount_ResponseStruct)_responseObj;
            }
            
            return _myWebservice_RegisterAccount_ResponseStruct.get_return();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case CancelPolicy_OPCODE:
                _deserialize_CancelPolicy(bodyReader, deserializationContext, state);
                break;
            case UploadRecon_OPCODE:
                _deserialize_UploadRecon(bodyReader, deserializationContext, state);
                break;
            case CallMe_OPCODE:
                _deserialize_CallMe(bodyReader, deserializationContext, state);
                break;
            case VoidPayment_OPCODE:
                _deserialize_VoidPayment(bodyReader, deserializationContext, state);
                break;
            case DownloadRecon_OPCODE:
                _deserialize_DownloadRecon(bodyReader, deserializationContext, state);
                break;
            case VerifyPolicy_OPCODE:
                _deserialize_VerifyPolicy(bodyReader, deserializationContext, state);
                break;
            case PayAccount_OPCODE:
                _deserialize_PayAccount(bodyReader, deserializationContext, state);
                break;
            case PayRefund_OPCODE:
                _deserialize_PayRefund(bodyReader, deserializationContext, state);
                break;
            case Echo_OPCODE:
                _deserialize_Echo(bodyReader, deserializationContext, state);
                break;
            case PayTrafficFine_OPCODE:
                _deserialize_PayTrafficFine(bodyReader, deserializationContext, state);
                break;
            case ConfirmPayment_OPCODE:
                _deserialize_ConfirmPayment(bodyReader, deserializationContext, state);
                break;
            case PayoutAccount_OPCODE:
                _deserialize_PayoutAccount(bodyReader, deserializationContext, state);
                break;
            case RegisterPolicy_OPCODE:
                _deserialize_RegisterPolicy(bodyReader, deserializationContext, state);
                break;
            case PayPolicy_OPCODE:
                _deserialize_PayPolicy(bodyReader, deserializationContext, state);
                break;
            case RegisterAccount_OPCODE:
                _deserialize_RegisterAccount(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the CancelPolicy operation.
     */
    private void _deserialize_CancelPolicy(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_CancelPolicy_ResponseStructObj =
            ns1_myWebservice_CancelPolicy_ResponseStruct_SOAPSerializer.deserialize(ns1_CancelPolicy_CancelPolicyResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CancelPolicy_CancelPolicyResponse_QNAME);
        bodyBlock.setValue(myWebservice_CancelPolicy_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the UploadRecon operation.
     */
    private void _deserialize_UploadRecon(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_UploadRecon_ResponseStructObj =
            ns1_myWebservice_UploadRecon_ResponseStruct_SOAPSerializer.deserialize(ns1_UploadRecon_UploadReconResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_UploadRecon_UploadReconResponse_QNAME);
        bodyBlock.setValue(myWebservice_UploadRecon_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the CallMe operation.
     */
    private void _deserialize_CallMe(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_CallMe_ResponseStructObj =
            ns1_myWebservice_CallMe_ResponseStruct_SOAPSerializer.deserialize(ns1_CallMe_CallMeResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_CallMe_CallMeResponse_QNAME);
        bodyBlock.setValue(myWebservice_CallMe_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the VoidPayment operation.
     */
    private void _deserialize_VoidPayment(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_VoidPayment_ResponseStructObj =
            ns1_myWebservice_VoidPayment_ResponseStruct_SOAPSerializer.deserialize(ns1_VoidPayment_VoidPaymentResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_VoidPayment_VoidPaymentResponse_QNAME);
        bodyBlock.setValue(myWebservice_VoidPayment_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the DownloadRecon operation.
     */
    private void _deserialize_DownloadRecon(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_DownloadRecon_ResponseStructObj =
            ns1_myWebservice_DownloadRecon_ResponseStruct_SOAPSerializer.deserialize(ns1_DownloadRecon_DownloadReconResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_DownloadRecon_DownloadReconResponse_QNAME);
        bodyBlock.setValue(myWebservice_DownloadRecon_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the VerifyPolicy operation.
     */
    private void _deserialize_VerifyPolicy(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_VerifyPolicy_ResponseStructObj =
            ns1_myWebservice_VerifyPolicy_ResponseStruct_SOAPSerializer.deserialize(ns1_VerifyPolicy_VerifyPolicyResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_VerifyPolicy_VerifyPolicyResponse_QNAME);
        bodyBlock.setValue(myWebservice_VerifyPolicy_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the PayAccount operation.
     */
    private void _deserialize_PayAccount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_PayAccount_ResponseStructObj =
            ns1_myWebservice_PayAccount_ResponseStruct_SOAPSerializer.deserialize(ns1_PayAccount_PayAccountResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_PayAccount_PayAccountResponse_QNAME);
        bodyBlock.setValue(myWebservice_PayAccount_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the PayRefund operation.
     */
    private void _deserialize_PayRefund(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_PayRefund_ResponseStructObj =
            ns1_myWebservice_PayRefund_ResponseStruct_SOAPSerializer.deserialize(ns1_PayRefund_PayRefundResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_PayRefund_PayRefundResponse_QNAME);
        bodyBlock.setValue(myWebservice_PayRefund_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the Echo operation.
     */
    private void _deserialize_Echo(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_Echo_ResponseStructObj =
            ns1_myWebservice_Echo_ResponseStruct_SOAPSerializer.deserialize(ns1_Echo_EchoResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_Echo_EchoResponse_QNAME);
        bodyBlock.setValue(myWebservice_Echo_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the PayTrafficFine operation.
     */
    private void _deserialize_PayTrafficFine(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_PayTrafficFine_ResponseStructObj =
            ns1_myWebservice_PayTrafficFine_ResponseStruct_SOAPSerializer.deserialize(ns1_PayTrafficFine_PayTrafficFineResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_PayTrafficFine_PayTrafficFineResponse_QNAME);
        bodyBlock.setValue(myWebservice_PayTrafficFine_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the ConfirmPayment operation.
     */
    private void _deserialize_ConfirmPayment(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_ConfirmPayment_ResponseStructObj =
            ns1_myWebservice_ConfirmPayment_ResponseStruct_SOAPSerializer.deserialize(ns1_ConfirmPayment_ConfirmPaymentResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_ConfirmPayment_ConfirmPaymentResponse_QNAME);
        bodyBlock.setValue(myWebservice_ConfirmPayment_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the PayoutAccount operation.
     */
    private void _deserialize_PayoutAccount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_PayoutAccount_ResponseStructObj =
            ns1_myWebservice_PayoutAccount_ResponseStruct_SOAPSerializer.deserialize(ns1_PayoutAccount_PayoutAccountResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_PayoutAccount_PayoutAccountResponse_QNAME);
        bodyBlock.setValue(myWebservice_PayoutAccount_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RegisterPolicy operation.
     */
    private void _deserialize_RegisterPolicy(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_RegisterPolicy_ResponseStructObj =
            ns1_myWebservice_RegisterPolicy_ResponseStruct_SOAPSerializer.deserialize(ns1_RegisterPolicy_RegisterPolicyResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RegisterPolicy_RegisterPolicyResponse_QNAME);
        bodyBlock.setValue(myWebservice_RegisterPolicy_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the PayPolicy operation.
     */
    private void _deserialize_PayPolicy(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_PayPolicy_ResponseStructObj =
            ns1_myWebservice_PayPolicy_ResponseStruct_SOAPSerializer.deserialize(ns1_PayPolicy_PayPolicyResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_PayPolicy_PayPolicyResponse_QNAME);
        bodyBlock.setValue(myWebservice_PayPolicy_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the RegisterAccount operation.
     */
    private void _deserialize_RegisterAccount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myWebservice_RegisterAccount_ResponseStructObj =
            ns1_myWebservice_RegisterAccount_ResponseStruct_SOAPSerializer.deserialize(ns1_RegisterAccount_RegisterAccountResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_RegisterAccount_RegisterAccountResponse_QNAME);
        bodyBlock.setValue(myWebservice_RegisterAccount_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    
    
    public java.lang.String _getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public java.lang.String _getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    public java.lang.String _getEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public void _setEncodingStyle(java.lang.String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        ns1_myWebservice_Echo_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_Echo_RequestStruct.class, ns1_Echo_TYPE_QNAME);
        ns1_myWebservice_ConfirmPayment_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_ConfirmPayment_ResponseStruct.class, ns1_ConfirmPaymentResponse_TYPE_QNAME);
        ns1_myWebservice_UploadRecon_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_UploadRecon_RequestStruct.class, ns1_UploadRecon_TYPE_QNAME);
        ns1_myWebservice_VerifyPolicy_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_VerifyPolicy_RequestStruct.class, ns1_VerifyPolicy_TYPE_QNAME);
        ns1_myWebservice_PayRefund_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_PayRefund_ResponseStruct.class, ns1_PayRefundResponse_TYPE_QNAME);
        ns1_myWebservice_PayAccount_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_PayAccount_RequestStruct.class, ns1_PayAccount_TYPE_QNAME);
        ns1_myWebservice_RegisterAccount_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_RegisterAccount_ResponseStruct.class, ns1_RegisterAccountResponse_TYPE_QNAME);
        ns1_myWebservice_UploadRecon_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_UploadRecon_ResponseStruct.class, ns1_UploadReconResponse_TYPE_QNAME);
        ns1_myWebservice_RegisterAccount_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_RegisterAccount_RequestStruct.class, ns1_RegisterAccount_TYPE_QNAME);
        ns1_myWebservice_PayTrafficFine_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_PayTrafficFine_RequestStruct.class, ns1_PayTrafficFine_TYPE_QNAME);
        ns1_myWebservice_RegisterPolicy_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_RegisterPolicy_RequestStruct.class, ns1_RegisterPolicy_TYPE_QNAME);
        ns1_myWebservice_PayoutAccount_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_PayoutAccount_RequestStruct.class, ns1_PayoutAccount_TYPE_QNAME);
        ns1_myWebservice_DownloadRecon_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_DownloadRecon_ResponseStruct.class, ns1_DownloadReconResponse_TYPE_QNAME);
        ns1_myWebservice_ConfirmPayment_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_ConfirmPayment_RequestStruct.class, ns1_ConfirmPayment_TYPE_QNAME);
        ns1_myWebservice_PayTrafficFine_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_PayTrafficFine_ResponseStruct.class, ns1_PayTrafficFineResponse_TYPE_QNAME);
        ns1_myWebservice_CallMe_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_CallMe_ResponseStruct.class, ns1_CallMeResponse_TYPE_QNAME);
        ns1_myWebservice_Echo_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_Echo_ResponseStruct.class, ns1_EchoResponse_TYPE_QNAME);
        ns1_myWebservice_VoidPayment_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_VoidPayment_ResponseStruct.class, ns1_VoidPaymentResponse_TYPE_QNAME);
        ns1_myWebservice_CallMe_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_CallMe_RequestStruct.class, ns1_CallMe_TYPE_QNAME);
        ns1_myWebservice_DownloadRecon_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_DownloadRecon_RequestStruct.class, ns1_DownloadRecon_TYPE_QNAME);
        ns1_myWebservice_CancelPolicy_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_CancelPolicy_ResponseStruct.class, ns1_CancelPolicyResponse_TYPE_QNAME);
        ns1_myWebservice_PayoutAccount_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_PayoutAccount_ResponseStruct.class, ns1_PayoutAccountResponse_TYPE_QNAME);
        ns1_myWebservice_VerifyPolicy_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_VerifyPolicy_ResponseStruct.class, ns1_VerifyPolicyResponse_TYPE_QNAME);
        ns1_myWebservice_PayRefund_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_PayRefund_RequestStruct.class, ns1_PayRefund_TYPE_QNAME);
        ns1_myWebservice_PayAccount_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_PayAccount_ResponseStruct.class, ns1_PayAccountResponse_TYPE_QNAME);
        ns1_myWebservice_VoidPayment_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_VoidPayment_RequestStruct.class, ns1_VoidPayment_TYPE_QNAME);
        ns1_myWebservice_CancelPolicy_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_CancelPolicy_RequestStruct.class, ns1_CancelPolicy_TYPE_QNAME);
        ns1_myWebservice_RegisterPolicy_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_RegisterPolicy_ResponseStruct.class, ns1_RegisterPolicyResponse_TYPE_QNAME);
        ns1_myWebservice_PayPolicy_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_PayPolicy_ResponseStruct.class, ns1_PayPolicyResponse_TYPE_QNAME);
        ns1_myWebservice_PayPolicy_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.nmt.payapi.Webservice_PayPolicy_RequestStruct.class, ns1_PayPolicy_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName _portName = new QName("http://www.finsp.co.za/", "webservicePort");
    private static final int CancelPolicy_OPCODE = 0;
    private static final int UploadRecon_OPCODE = 1;
    private static final int CallMe_OPCODE = 2;
    private static final int VoidPayment_OPCODE = 3;
    private static final int DownloadRecon_OPCODE = 4;
    private static final int VerifyPolicy_OPCODE = 5;
    private static final int PayAccount_OPCODE = 6;
    private static final int PayRefund_OPCODE = 7;
    private static final int Echo_OPCODE = 8;
    private static final int PayTrafficFine_OPCODE = 9;
    private static final int ConfirmPayment_OPCODE = 10;
    private static final int PayoutAccount_OPCODE = 11;
    private static final int RegisterPolicy_OPCODE = 12;
    private static final int PayPolicy_OPCODE = 13;
    private static final int RegisterAccount_OPCODE = 14;
    private static final javax.xml.namespace.QName ns1_CancelPolicy_CancelPolicy_QNAME = new QName("urn:WebserviceIntf-Webservice", "CancelPolicy");
    private static final javax.xml.namespace.QName ns1_CancelPolicy_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "CancelPolicy");
    private CombinedSerializer ns1_myWebservice_CancelPolicy_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_CancelPolicy_CancelPolicyResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "CancelPolicyResponse");
    private static final javax.xml.namespace.QName ns1_CancelPolicyResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "CancelPolicyResponse");
    private CombinedSerializer ns1_myWebservice_CancelPolicy_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_UploadRecon_UploadRecon_QNAME = new QName("urn:WebserviceIntf-Webservice", "UploadRecon");
    private static final javax.xml.namespace.QName ns1_UploadRecon_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "UploadRecon");
    private CombinedSerializer ns1_myWebservice_UploadRecon_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_UploadRecon_UploadReconResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "UploadReconResponse");
    private static final javax.xml.namespace.QName ns1_UploadReconResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "UploadReconResponse");
    private CombinedSerializer ns1_myWebservice_UploadRecon_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_CallMe_CallMe_QNAME = new QName("urn:WebserviceIntf-Webservice", "CallMe");
    private static final javax.xml.namespace.QName ns1_CallMe_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "CallMe");
    private CombinedSerializer ns1_myWebservice_CallMe_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_CallMe_CallMeResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "CallMeResponse");
    private static final javax.xml.namespace.QName ns1_CallMeResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "CallMeResponse");
    private CombinedSerializer ns1_myWebservice_CallMe_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_VoidPayment_VoidPayment_QNAME = new QName("urn:WebserviceIntf-Webservice", "VoidPayment");
    private static final javax.xml.namespace.QName ns1_VoidPayment_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "VoidPayment");
    private CombinedSerializer ns1_myWebservice_VoidPayment_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_VoidPayment_VoidPaymentResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "VoidPaymentResponse");
    private static final javax.xml.namespace.QName ns1_VoidPaymentResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "VoidPaymentResponse");
    private CombinedSerializer ns1_myWebservice_VoidPayment_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_DownloadRecon_DownloadRecon_QNAME = new QName("urn:WebserviceIntf-Webservice", "DownloadRecon");
    private static final javax.xml.namespace.QName ns1_DownloadRecon_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "DownloadRecon");
    private CombinedSerializer ns1_myWebservice_DownloadRecon_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_DownloadRecon_DownloadReconResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "DownloadReconResponse");
    private static final javax.xml.namespace.QName ns1_DownloadReconResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "DownloadReconResponse");
    private CombinedSerializer ns1_myWebservice_DownloadRecon_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_VerifyPolicy_VerifyPolicy_QNAME = new QName("urn:WebserviceIntf-Webservice", "VerifyPolicy");
    private static final javax.xml.namespace.QName ns1_VerifyPolicy_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "VerifyPolicy");
    private CombinedSerializer ns1_myWebservice_VerifyPolicy_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_VerifyPolicy_VerifyPolicyResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "VerifyPolicyResponse");
    private static final javax.xml.namespace.QName ns1_VerifyPolicyResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "VerifyPolicyResponse");
    private CombinedSerializer ns1_myWebservice_VerifyPolicy_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_PayAccount_PayAccount_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayAccount");
    private static final javax.xml.namespace.QName ns1_PayAccount_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayAccount");
    private CombinedSerializer ns1_myWebservice_PayAccount_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_PayAccount_PayAccountResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayAccountResponse");
    private static final javax.xml.namespace.QName ns1_PayAccountResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayAccountResponse");
    private CombinedSerializer ns1_myWebservice_PayAccount_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_PayRefund_PayRefund_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayRefund");
    private static final javax.xml.namespace.QName ns1_PayRefund_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayRefund");
    private CombinedSerializer ns1_myWebservice_PayRefund_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_PayRefund_PayRefundResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayRefundResponse");
    private static final javax.xml.namespace.QName ns1_PayRefundResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayRefundResponse");
    private CombinedSerializer ns1_myWebservice_PayRefund_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_Echo_Echo_QNAME = new QName("urn:WebserviceIntf-Webservice", "Echo");
    private static final javax.xml.namespace.QName ns1_Echo_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "Echo");
    private CombinedSerializer ns1_myWebservice_Echo_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_Echo_EchoResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "EchoResponse");
    private static final javax.xml.namespace.QName ns1_EchoResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "EchoResponse");
    private CombinedSerializer ns1_myWebservice_Echo_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_PayTrafficFine_PayTrafficFine_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayTrafficFine");
    private static final javax.xml.namespace.QName ns1_PayTrafficFine_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayTrafficFine");
    private CombinedSerializer ns1_myWebservice_PayTrafficFine_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_PayTrafficFine_PayTrafficFineResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayTrafficFineResponse");
    private static final javax.xml.namespace.QName ns1_PayTrafficFineResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayTrafficFineResponse");
    private CombinedSerializer ns1_myWebservice_PayTrafficFine_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_ConfirmPayment_ConfirmPayment_QNAME = new QName("urn:WebserviceIntf-Webservice", "ConfirmPayment");
    private static final javax.xml.namespace.QName ns1_ConfirmPayment_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "ConfirmPayment");
    private CombinedSerializer ns1_myWebservice_ConfirmPayment_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_ConfirmPayment_ConfirmPaymentResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "ConfirmPaymentResponse");
    private static final javax.xml.namespace.QName ns1_ConfirmPaymentResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "ConfirmPaymentResponse");
    private CombinedSerializer ns1_myWebservice_ConfirmPayment_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_PayoutAccount_PayoutAccount_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayoutAccount");
    private static final javax.xml.namespace.QName ns1_PayoutAccount_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayoutAccount");
    private CombinedSerializer ns1_myWebservice_PayoutAccount_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_PayoutAccount_PayoutAccountResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayoutAccountResponse");
    private static final javax.xml.namespace.QName ns1_PayoutAccountResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayoutAccountResponse");
    private CombinedSerializer ns1_myWebservice_PayoutAccount_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_RegisterPolicy_RegisterPolicy_QNAME = new QName("urn:WebserviceIntf-Webservice", "RegisterPolicy");
    private static final javax.xml.namespace.QName ns1_RegisterPolicy_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "RegisterPolicy");
    private CombinedSerializer ns1_myWebservice_RegisterPolicy_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_RegisterPolicy_RegisterPolicyResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "RegisterPolicyResponse");
    private static final javax.xml.namespace.QName ns1_RegisterPolicyResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "RegisterPolicyResponse");
    private CombinedSerializer ns1_myWebservice_RegisterPolicy_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_PayPolicy_PayPolicy_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayPolicy");
    private static final javax.xml.namespace.QName ns1_PayPolicy_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayPolicy");
    private CombinedSerializer ns1_myWebservice_PayPolicy_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_PayPolicy_PayPolicyResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayPolicyResponse");
    private static final javax.xml.namespace.QName ns1_PayPolicyResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "PayPolicyResponse");
    private CombinedSerializer ns1_myWebservice_PayPolicy_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_RegisterAccount_RegisterAccount_QNAME = new QName("urn:WebserviceIntf-Webservice", "RegisterAccount");
    private static final javax.xml.namespace.QName ns1_RegisterAccount_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "RegisterAccount");
    private CombinedSerializer ns1_myWebservice_RegisterAccount_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_RegisterAccount_RegisterAccountResponse_QNAME = new QName("urn:WebserviceIntf-Webservice", "RegisterAccountResponse");
    private static final javax.xml.namespace.QName ns1_RegisterAccountResponse_TYPE_QNAME = new QName("urn:WebserviceIntf-Webservice", "RegisterAccountResponse");
    private CombinedSerializer ns1_myWebservice_RegisterAccount_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "urn:WebserviceIntf-Webservice",
                                            "ns1", "urn:WebserviceIntf",
                                            "ns2", "http://bolpaygate.com/payGate/type/"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
